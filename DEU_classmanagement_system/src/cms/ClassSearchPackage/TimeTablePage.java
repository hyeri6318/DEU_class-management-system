/*
작성자 : 이혜리
기능 : 실습실별 시간표 조회
 */
package cms.ClassSearchPackage;

import cms.ConnectDB.ConnectDB;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 이혜리
 */
public class TimeTablePage extends javax.swing.JFrame {

    /**
     * Creates new form TimeTablePage
     */
    public TimeTablePage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        time_table = new javax.swing.JTable();
        t911_button = new javax.swing.JButton();
        t918_button = new javax.swing.JButton();
        t916_button = new javax.swing.JButton();
        t915_button = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        time_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "과목번호", "교수번호", "과목명", "시작시간", "끝시간", "요일", "날짜"
            }
        ));
        jScrollPane1.setViewportView(time_table);

        t911_button.setText("911 시간표 조회");
        t911_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t911_buttonActionPerformed(evt);
            }
        });

        t918_button.setText("918 시간표 조회");
        t918_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t918_buttonActionPerformed(evt);
            }
        });

        t916_button.setText("916 시간표 조회");
        t916_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t916_buttonActionPerformed(evt);
            }
        });

        t915_button.setText("915 시간표 조회");
        t915_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t915_buttonActionPerformed(evt);
            }
        });

        exit.setText("이전");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel1.setText("시간표 조회");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(436, 436, 436)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t911_button)
                            .addComponent(t918_button)
                            .addComponent(t916_button)
                            .addComponent(t915_button))))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(t915_button)
                        .addGap(18, 18, 18)
                        .addComponent(t916_button)
                        .addGap(18, 18, 18)
                        .addComponent(t918_button)
                        .addGap(18, 18, 18)
                        .addComponent(t911_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 53, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    int check = 0; // 시간표 조회 횟수를 1회로 제한
    
    private void t911_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t911_buttonActionPerformed
        // TODO add your handling code here:

        if (check != -1) {
            DefaultTableModel model = (DefaultTableModel) time_table.getModel();

            ConnectDB db = new ConnectDB();
            Connection conn = null;
            Statement st = null;
            ResultSet rs = null;
            try {
                conn = db.getConnection();
                st = conn.createStatement();

                rs = st.executeQuery(("select * from schedule where class_num='911'"));
                ArrayList lnum_list = new ArrayList<String>();
                ArrayList profnum_list = new ArrayList<String>();
                ArrayList lname_list = new ArrayList<String>();
                ArrayList starttime_list = new ArrayList<String>();
                ArrayList endtime_list = new ArrayList<String>();
                ArrayList day_list = new ArrayList<String>();
                ArrayList date_list = new ArrayList<String>();

                while (rs.next()) {
                    lnum_list.add(rs.getString("lecture_num"));
                    profnum_list.add(rs.getString("prof_num"));
                    lname_list.add(rs.getString("lecture_name"));
                    starttime_list.add(rs.getString("l_starttime"));
                    endtime_list.add(rs.getString("l_endtime"));
                    day_list.add(rs.getString("l_day"));
                    date_list.add(rs.getString("l_date"));
                }

                Object[] tableline = lnum_list.toArray();

                for (int i = 0; i < tableline.length; i++) {

                    ArrayList arr = new ArrayList<>();

                    arr.add(lnum_list.get(i));
                    arr.add(profnum_list.get(i));
                    arr.add(lname_list.get(i));
                    arr.add(starttime_list.get(i));
                    arr.add(endtime_list.get(i));
                    arr.add(day_list.get(i));
                    arr.add(date_list.get(i));

                    model.addRow(new Object[]{arr.get(0), arr.get(1), arr.get(2), arr.get(3), arr.get(4), arr.get(5), arr.get(6)});
                }
                check = -1;

                conn.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "시간표 조회는 1회만 가능합니다.");
        }
    }//GEN-LAST:event_t911_buttonActionPerformed

    private void t918_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t918_buttonActionPerformed
        // TODO add your handling code here:
        if (check != -1) {
            DefaultTableModel model = (DefaultTableModel) time_table.getModel();

            ConnectDB db = new ConnectDB();
            Connection conn = null;
            Statement st = null;
            ResultSet rs = null;
            try {
                conn = db.getConnection();
                st = conn.createStatement();

                rs = st.executeQuery(("select * from schedule where class_num='918'"));
                ArrayList lnum_list = new ArrayList<String>();
                ArrayList profnum_list = new ArrayList<String>();
                ArrayList lname_list = new ArrayList<String>();
                ArrayList starttime_list = new ArrayList<String>();
                ArrayList endtime_list = new ArrayList<String>();
                ArrayList day_list = new ArrayList<String>();
                ArrayList date_list = new ArrayList<String>();

                while (rs.next()) {
                    lnum_list.add(rs.getString("lecture_num"));
                    profnum_list.add(rs.getString("prof_num"));
                    lname_list.add(rs.getString("lecture_name"));
                    starttime_list.add(rs.getString("l_starttime"));
                    endtime_list.add(rs.getString("l_endtime"));
                    day_list.add(rs.getString("l_day"));
                    date_list.add(rs.getString("l_date"));
                }

                Object[] tableline = lnum_list.toArray();

                for (int i = 0; i < tableline.length; i++) {

                    ArrayList arr = new ArrayList<>();

                    arr.add(lnum_list.get(i));
                    arr.add(profnum_list.get(i));
                    arr.add(lname_list.get(i));
                    arr.add(starttime_list.get(i));
                    arr.add(endtime_list.get(i));
                    arr.add(day_list.get(i));
                    arr.add(date_list.get(i));

                    model.addRow(new Object[]{arr.get(0), arr.get(1), arr.get(2), arr.get(3), arr.get(4), arr.get(5), arr.get(6)});
                }
                check = -1;

                conn.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "시간표 조회는 1회만 가능합니다.");
        }
    }//GEN-LAST:event_t918_buttonActionPerformed

    private void t916_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t916_buttonActionPerformed
        // TODO add your handling code here:
        if (check != -1) {
            DefaultTableModel model = (DefaultTableModel) time_table.getModel();

            ConnectDB db = new ConnectDB();
            Connection conn = null;
            Statement st = null;
            ResultSet rs = null;
            try {
                conn = db.getConnection();
                st = conn.createStatement();

                rs = st.executeQuery(("select * from schedule where class_num='916'"));
                ArrayList lnum_list = new ArrayList<String>();
                ArrayList profnum_list = new ArrayList<String>();
                ArrayList lname_list = new ArrayList<String>();
                ArrayList starttime_list = new ArrayList<String>();
                ArrayList endtime_list = new ArrayList<String>();
                ArrayList day_list = new ArrayList<String>();
                ArrayList date_list = new ArrayList<String>();

                while (rs.next()) {
                    lnum_list.add(rs.getString("lecture_num"));
                    profnum_list.add(rs.getString("prof_num"));
                    lname_list.add(rs.getString("lecture_name"));
                    starttime_list.add(rs.getString("l_starttime"));
                    endtime_list.add(rs.getString("l_endtime"));
                    day_list.add(rs.getString("l_day"));
                    date_list.add(rs.getString("l_date"));
                }

                Object[] tableline = lnum_list.toArray();

                for (int i = 0; i < tableline.length; i++) {

                    ArrayList arr = new ArrayList<>();

                    arr.add(lnum_list.get(i));
                    arr.add(profnum_list.get(i));
                    arr.add(lname_list.get(i));
                    arr.add(starttime_list.get(i));
                    arr.add(endtime_list.get(i));
                    arr.add(day_list.get(i));
                    arr.add(date_list.get(i));

                    model.addRow(new Object[]{arr.get(0), arr.get(1), arr.get(2), arr.get(3), arr.get(4), arr.get(5), arr.get(6)});
                }
                check = -1;

                conn.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "시간표 조회는 1회만 가능합니다.");
        }
    }//GEN-LAST:event_t916_buttonActionPerformed

    private void t915_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t915_buttonActionPerformed
        // TODO add your handling code here:
        if (check != -1) {
            DefaultTableModel model = (DefaultTableModel) time_table.getModel();

            ConnectDB db = new ConnectDB();
            Connection conn = null;
            Statement st = null;
            ResultSet rs = null;
            try {
                conn = db.getConnection();
                st = conn.createStatement();

                rs = st.executeQuery(("select * from schedule where class_num='915'"));
                ArrayList lnum_list = new ArrayList<String>();
                ArrayList profnum_list = new ArrayList<String>();
                ArrayList lname_list = new ArrayList<String>();
                ArrayList starttime_list = new ArrayList<String>();
                ArrayList endtime_list = new ArrayList<String>();
                ArrayList day_list = new ArrayList<String>();
                ArrayList date_list = new ArrayList<String>();

                while (rs.next()) {
                    lnum_list.add(rs.getString("lecture_num"));
                    profnum_list.add(rs.getString("prof_num"));
                    lname_list.add(rs.getString("lecture_name"));
                    starttime_list.add(rs.getString("l_starttime"));
                    endtime_list.add(rs.getString("l_endtime"));
                    day_list.add(rs.getString("l_day"));
                    date_list.add(rs.getString("l_date"));
                }

                Object[] tableline = lnum_list.toArray();

                for (int i = 0; i < tableline.length; i++) {

                    ArrayList arr = new ArrayList<>();

                    arr.add(lnum_list.get(i));
                    arr.add(profnum_list.get(i));
                    arr.add(lname_list.get(i));
                    arr.add(starttime_list.get(i));
                    arr.add(endtime_list.get(i));
                    arr.add(day_list.get(i));
                    arr.add(date_list.get(i));

                    model.addRow(new Object[]{arr.get(0), arr.get(1), arr.get(2), arr.get(3), arr.get(4), arr.get(5), arr.get(6)});
                }
                check = -1;

                conn.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "시간표 조회는 1회만 가능합니다.");
        }
    }//GEN-LAST:event_t915_buttonActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_exitActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimeTablePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimeTablePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimeTablePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeTablePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimeTablePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton t911_button;
    private javax.swing.JButton t915_button;
    private javax.swing.JButton t916_button;
    private javax.swing.JButton t918_button;
    public static javax.swing.JTable time_table;
    // End of variables declaration//GEN-END:variables
}
